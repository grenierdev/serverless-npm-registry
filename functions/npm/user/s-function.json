{
	"name": "user",
	"runtime": "nodejs4.3",
	"description": "Serverless Lambda function for project: serverless-private-npm",
	"customName": false,
	"customRole": false,
	"handler": "npm/user/handler.handler",
	"timeout": 60,
	"memorySize": 1024,
	"authorizer": {},
	"custom": {
		"excludePatterns": []
	},
	"endpoints": [
		{
			"path": "/-/whoami",
			"method": "GET",
			"type": "AWS",
			"authorizationType": "none",
			"authorizerFunction": false,
			"apiKeyRequired": false,
			"requestParameters": {},
			"requestTemplates": {
				"application/json": {
					"method": "$context.httpMethod",
					"path": "$context.resourcePath",
					"authorization": "$input.params().header.Authorization"
				}
			},
			"responses": {
				".*You need to login.*": {
					"statusCode": "401",
					"responseTemplates": {
						"application/json": "#set ($error = $util.parseJson($input.path('$.errorMessage'))) { \"error\": \"$util.escapeJavaScript($error.error)\" }"
					}
				},
				"default": {
					"statusCode": "200",
					"responseParameters": {},
					"responseModels": {},
					"responseTemplates": {
						"application/json": ""
					}
				}
			}
		},
		{
			"path": "/-/user/{name}",
			"method": "GET",
			"type": "AWS",
			"authorizationType": "none",
			"authorizerFunction": false,
			"apiKeyRequired": false,
			"requestParameters": {},
			"requestTemplates": {
				"application/json": {
					"method": "$context.httpMethod",
					"path": "$context.resourcePath",
					"name": "$input.params('name')"
				}
			},
			"responses": {
				"User .* does not exists.": {
					"statusCode": "404",
					"responseTemplates": {
						"application/json": "#set ($error = $util.parseJson($input.path('$.errorMessage'))) { \"error\": \"$util.escapeJavaScript($error.error)\" }"
					}
				},
				"default": {
					"statusCode": "200",
					"responseParameters": {},
					"responseModels": {},
					"responseTemplates": {
						"application/json": ""
					}
				}
			}
		},
		{
			"path": "/-/user/{name}",
			"method": "PUT",
			"type": "AWS",
			"authorizationType": "none",
			"authorizerFunction": false,
			"apiKeyRequired": false,
			"requestParameters": {},
			"requestTemplates": {
				"application/json": {
					"method": "$context.httpMethod",
					"path": "$context.resourcePath",
					"name": "$input.params('name')",
					"body" : "$input.json('$')"
				}
			},
			"responses": {
				".*User was not provided.*": {
					"statusCode": "400",
					"responseTemplates": {
						"application/json": "#set ($error = $util.parseJson($input.path('$.errorMessage'))) { \"error\": \"$util.escapeJavaScript($error.error)\" }"
					}
				},
				".*does not exists or password mismatch.*": {
					"statusCode": "409",
					"responseTemplates": {
						"application/json": "#set ($error = $util.parseJson($input.path('$.errorMessage'))) { \"error\": \"$util.escapeJavaScript($error.error)\" }"
					}
				},
				"default": {
					"statusCode": "201",
					"responseParameters": {},
					"responseModels": {},
					"responseTemplates": {
						"application/json": ""
					}
				}
			}
		},
		{
			"path": "/-/user/{name}/-rev/{revision}",
			"method": "PUT",
			"type": "AWS",
			"authorizationType": "none",
			"authorizerFunction": false,
			"apiKeyRequired": false,
			"requestParameters": {},
			"requestTemplates": {
				"application/json": {
					"method": "$context.httpMethod",
					"path": "$context.resourcePath",
					"name": "$input.params('name')",
					"revision": "$input.params('revision')",
					"body" : "$input.json('$')"
				}
			},
			"responses": {
				".*User was not provided.*": {
					"statusCode": "400",
					"responseTemplates": {
						"application/json": "#set ($error = $util.parseJson($input.path('$.errorMessage'))) { \"error\": \"$util.escapeJavaScript($error.error)\" }"
					}
				},
				".*does not exists or password mismatch.*": {
					"statusCode": "409",
					"responseTemplates": {
						"application/json": "#set ($error = $util.parseJson($input.path('$.errorMessage'))) { \"error\": \"$util.escapeJavaScript($error.error)\" }"
					}
				},
				"default": {
					"statusCode": "201",
					"responseParameters": {},
					"responseModels": {},
					"responseTemplates": {
						"application/json": ""
					}
				}
			}
		},
		{
			"path": "/-/user/token/{token}",
			"method": "DELETE",
			"type": "AWS",
			"authorizationType": "none",
			"authorizerFunction": false,
			"apiKeyRequired": false,
			"requestParameters": {},
			"requestTemplates": {
				"application/json": {
					"method": "$context.httpMethod",
					"path": "$context.resourcePath",
					"token": "$input.params('token')"
				}
			},
			"responses": {
				"default": {
					"statusCode": "200",
					"responseParameters": {},
					"responseModels": {},
					"responseTemplates": {
						"application/json": ""
					}
				}
			}
		}
	],
	"events": [],
	"environment": "$${npmEnvironments}",
	"vpc": {
		"securityGroupIds": [],
		"subnetIds": []
	}
}
